{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/AddTodoForm/AddTodoForm.tsx","App.tsx","index.tsx"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","UserInfo","React","memo","TodoInfo","complited","user","TodoList","map","AddTodoForm","state","newTitle","isNewTitle","userName","isUserName","this","props","addTodo","onSubmit","e","preventDefault","setState","htmlFor","type","value","placeholder","onChange","target","valueCharactersArr","split","every","char","includes","toLocaleLowerCase","defaultValue","style","display","Component","App","visibleTodos","todoTitle","selectedUser","find","newTodo","length","preparedTodos","todo","theRightUser","todoCopy","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f28bd24.chunk.js","sourcesContent":["import { User } from '../types/User';\n\nconst users: User[] = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nimport { Todo } from '../types/Todo';\n\nconst todos: Todo[] = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\n\ntype Props = {\n  name: string,\n  email: string,\n};\n\nexport const UserInfo = React.memo<Props>(\n  ({ name, email }) => (\n    <>\n      <p>{name}</p>\n      <p>{email}</p>\n    </>\n  ),\n);\n","import React from 'react';\nimport { User } from '../../types/User';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  title: string,\n  complited: boolean,\n  user: User,\n};\n\nexport const TodoInfo = React.memo<Props>(\n  ({ title, complited, user }) => (\n    <>\n      <h3>{title}</h3>\n      <p>{complited ? 'Done' : 'Not done'}</p>\n      <UserInfo name={user.name} email={user.email} />\n    </>\n  ),\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList = React.memo<Props>(\n  ({ todos }) => (\n    <ul>\n      {todos.map(({\n        id,\n        title,\n        completed,\n        user,\n      }) => {\n        if (user) {\n          return (\n            <li key={id}>\n              <TodoInfo\n                title={title}\n                complited={completed}\n                user={user}\n              />\n            </li>\n          );\n        }\n\n        return user;\n      })}\n    </ul>\n  ),\n);\n","import React from 'react';\nimport { AddTodo } from '../../types/AddTodo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  users: User[];\n  addTodo: AddTodo;\n};\n\ntype State = {\n  newTitle: string,\n  isNewTitle: boolean,\n  userName: string,\n  isUserName: boolean,\n};\n\nexport class AddTodoForm extends React.Component<Props, State> {\n  state = {\n    newTitle: '',\n    isNewTitle: true,\n    userName: '',\n    isUserName: true,\n  };\n\n  render() {\n    const {\n      newTitle,\n      isNewTitle,\n      userName,\n      isUserName,\n    } = this.state;\n\n    const {\n      users,\n      addTodo,\n    } = this.props;\n\n    return (\n      <fieldset>\n        <legend>Add todo form</legend>\n\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            if (userName && newTitle) {\n              addTodo(userName, newTitle);\n              this.setState({\n                newTitle: '',\n                isNewTitle: true,\n                userName: '',\n                isUserName: true,\n              });\n            }\n\n            this.setState({\n              isNewTitle: !!newTitle,\n              isUserName: !!userName,\n            });\n          }}\n        >\n          <p>Todo title</p>\n\n          <label htmlFor=\"title\">\n            <input\n              type=\"text\"\n              id=\"title\"\n              name=\"title\"\n              value={newTitle}\n              placeholder=\"Enter the title\"\n              onChange={(e) => {\n                const { value } = e.target;\n                const valueCharactersArr = value.split('');\n                const characters = 'абвгдеёжзийклмнопрстуфхцчшщъыьэюя abcdefghijklmnopqrstuvwxyz123456789';\n                const canWrite = valueCharactersArr.every(char => {\n                  return characters.includes(char.toLocaleLowerCase());\n                });\n\n                if (canWrite) {\n                  this.setState({\n                    newTitle: value,\n                    isNewTitle: true,\n                  });\n                }\n              }}\n            />\n          </label>\n\n          {!isNewTitle && <span>Please enter the title</span>}\n\n          <p>User</p>\n\n          <label htmlFor=\"user\">\n            <select\n              id=\"user\"\n              value={userName}\n              onChange={(e) => this.setState({\n                userName: e.target.value,\n                isUserName: true,\n              })}\n            >\n              <option defaultValue=\"\">Chose user</option>\n              {users.map(({ name }) => {\n                return (\n                  <option\n                    key={name}\n                    defaultValue={name}\n                  >\n                    {name}\n                  </option>\n                );\n              })}\n            </select>\n          </label>\n\n          {!isUserName && <span>Please choose a user</span>}\n\n          <button\n            type=\"submit\"\n            style={{ display: 'block' }}\n          >\n            Add\n          </button>\n        </form>\n\n      </fieldset>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\n\nimport users from './api/users';\nimport todos from './api/todos';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { AddTodoForm } from './components/AddTodoForm';\nimport { AddTodo } from './types/AddTodo';\n\ntype State = {\n  visibleTodos: Todo[];\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    visibleTodos: todos,\n  };\n\n  addTodo: AddTodo = (userName, todoTitle) => {\n    const selectedUser = users.find(user => user.name === userName);\n\n    if (selectedUser && todoTitle) {\n      const newTodo: Todo = {\n        userId: selectedUser.id,\n        id: this.state.visibleTodos.length + 1,\n        title: todoTitle,\n        completed: false,\n        user: selectedUser,\n      };\n\n      this.setState(state => {\n        return { visibleTodos: [...state.visibleTodos, newTodo] };\n      });\n    }\n  };\n\n  render() {\n    const preparedTodos: Todo[] = this.state.visibleTodos.map(todo => {\n      const theRightUser = users.find(user => user.id === todo.userId);\n      const todoCopy = { ...todo };\n\n      todoCopy.user = theRightUser || null;\n\n      return todoCopy;\n    });\n\n    return (\n      <div className=\"app\">\n        <h1>List of todos</h1>\n\n        <TodoList todos={preparedTodos} />\n\n        <AddTodoForm users={users} addTodo={this.addTodo} />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}