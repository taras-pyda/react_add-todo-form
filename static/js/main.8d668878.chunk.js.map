{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/AddTodoForm/AddTodoForm.tsx","App.tsx","index.tsx"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","UserInfo","React","memo","TodoInfo","complited","user","TodoList","map","AddTodoForm","state","userName","buttonClicked","submitHandler","e","preventDefault","canAdd","trim","props","addTodo","setState","changeHandler","target","value","test","length","this","onSubmit","htmlFor","type","placeholder","onChange","defaultValue","style","display","Component","App","visibleTodos","todoTitle","selectedUser","find","newTodo","Date","todo","theRightUser","className","ReactDOM","render","document","getElementById"],"mappings":"4OA2OeA,G,MAzOO,CACpB,CACEC,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,oBACPC,QAAS,CACPC,OAAQ,cACRC,MAAO,WACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,wBACPC,QAAS,gBACTC,QAAS,CACPb,KAAM,kBACNc,YAAa,yCACbC,GAAI,gCAGR,CACEhB,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,oBACPC,QAAS,CACPC,OAAQ,gBACRC,MAAO,YACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,aAGTC,MAAO,sBACPC,QAAS,gBACTC,QAAS,CACPb,KAAM,eACNc,YAAa,iCACbC,GAAI,qCAGR,CACEhB,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,qBACPC,QAAS,CACPC,OAAQ,oBACRC,MAAO,YACPC,KAAM,gBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,aAGTC,MAAO,iBACPC,QAAS,cACTC,QAAS,CACPb,KAAM,qBACNc,YAAa,oCACbC,GAAI,oCAGR,CACEhB,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,4BACPC,QAAS,CACPC,OAAQ,cACRC,MAAO,WACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,cAGTC,MAAO,oBACPC,QAAS,WACTC,QAAS,CACPb,KAAM,gBACNc,YAAa,2CACbC,GAAI,yCAGR,CACEhB,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,2BACPC,QAAS,CACPC,OAAQ,eACRC,MAAO,YACPC,KAAM,aACNC,QAAS,QACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,gBACPC,QAAS,eACTC,QAAS,CACPb,KAAM,cACNc,YAAa,uCACbC,GAAI,qCAGR,CACEhB,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,0BACPC,QAAS,CACPC,OAAQ,oBACRC,MAAO,WACPC,KAAM,gBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,uBACPC,QAAS,UACTC,QAAS,CACPb,KAAM,oBACNc,YAAa,qCACbC,GAAI,qCAGR,CACEhB,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,yBACPC,QAAS,CACPC,OAAQ,YACRC,MAAO,YACPC,KAAM,YACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,YAGTC,MAAO,eACPC,QAAS,WACTC,QAAS,CACPb,KAAM,cACNc,YAAa,qCACbC,GAAI,kCAGR,CACEhB,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,uBACPC,QAAS,CACPC,OAAQ,mBACRC,MAAO,YACPC,KAAM,YACNC,QAAS,QACTC,IAAK,CACHC,IAAK,WACLC,IAAK,cAGTC,MAAO,oBACPC,QAAS,eACTC,QAAS,CACPb,KAAM,kBACNc,YAAa,gCACbC,GAAI,kCAGR,CACEhB,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,0BACPC,QAAS,CACPC,OAAQ,aACRC,MAAO,YACPC,KAAM,iBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,cAGTC,MAAO,uBACPC,QAAS,aACTC,QAAS,CACPb,KAAM,gBACNc,YAAa,wCACbC,GAAI,qCAGR,CACEhB,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,yBACPC,QAAS,CACPC,OAAQ,kBACRC,MAAO,YACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,eACPC,QAAS,cACTC,QAAS,CACPb,KAAM,aACNc,YAAa,oCACbC,GAAI,+BCnNKC,EAfO,CACpB,CACEC,OAAQ,EACRlB,GAAI,EACJmB,MAAO,qBACPC,WAAW,GAEb,CACEF,OAAQ,EACRlB,GAAI,EACJmB,MAAO,qCACPC,WAAW,I,OCRFC,EAAWC,IAAMC,MAC5B,gBAAGtB,EAAH,EAAGA,KAAME,EAAT,EAASA,MAAT,OACE,qCACE,4BAAIF,IACJ,4BAAIE,UCDGqB,EAAWF,IAAMC,MAC5B,gBAAGJ,EAAH,EAAGA,MAAOM,EAAV,EAAUA,UAAWC,EAArB,EAAqBA,KAArB,OACE,qCACE,6BAAKP,IACL,4BAAIM,EAAY,OAAS,aACzB,cAACJ,EAAD,CAAUpB,KAAMyB,EAAKzB,KAAME,MAAOuB,EAAKvB,cCPhCwB,EAAWL,IAAMC,MAC5B,gBAAGN,EAAH,EAAGA,MAAH,OACE,6BACGA,EAAMW,KAAI,YAKJ,IAJL5B,EAII,EAJJA,GACAmB,EAGI,EAHJA,MACAC,EAEI,EAFJA,UACAM,EACI,EADJA,KAEA,OAAOA,GACL,6BACE,cAACF,EAAD,CACEL,MAAOA,EACPM,UAAWL,EACXM,KAAMA,KAJD1B,W,OCHN6B,EAAb,4MACEC,MAAe,CACbX,MAAO,GACPY,SAAU,GACVC,eAAe,GAJnB,EAOEC,cAAkC,SAACC,GACjCA,EAAEC,iBAEF,MAGI,EAAKL,MAFPX,EADF,EACEA,MACAY,EAFF,EAEEA,SAGIK,IAAWL,KAAcZ,EAAMkB,OAEjCD,GACF,EAAKE,MAAMC,QAAQR,EAAUZ,GAG/B,EAAKqB,SAAS,CACZrB,MAAOiB,EAAS,GAAKjB,EACrBY,SAAUK,EAAS,GAAKL,EACxBC,eAAgBI,KAxBtB,EA4BEK,cAA0E,SAACP,GACzE,IAAQjC,EAASiC,EAAEQ,OAAXzC,KACA0C,EAAUT,EAAEQ,OAAZC,MAGK,UAAT1C,IAFe,6CAEiB2C,KAAKD,IAAUA,EAAME,OAAS,GAIlE,EAAKL,SAAL,eACGvC,EAAO0C,KAtCd,4CA0CE,WACE,MAIIG,KAAKhB,MAHPX,EADF,EACEA,MACAY,EAFF,EAEEA,SACAC,EAHF,EAGEA,cAIAjC,EACE+C,KAAKR,MADPvC,MAGF,OACE,qCACE,mDAEA,uBAAMgD,SAAUD,KAAKb,cAArB,UACE,2CAEA,uBAAOe,QAAQ,QAAf,SACE,uBACEC,KAAK,OACLjD,GAAG,QACHC,KAAK,QACL0C,MAAOxB,EACP+B,YAAY,kBACZC,SAAUL,KAAKL,kBAIjBT,IAAkBb,EAAMkB,QAAY,0DAEtC,qCAEA,uBAAOW,QAAQ,OAAf,SACE,yBACEhD,GAAG,OACHC,KAAK,WACL0C,MAAOZ,EACPoB,SAAUL,KAAKL,cAJjB,UAME,wBAAQE,MAAM,GAAd,yBACC5C,EAAM6B,KAAI,YAAe,IAAZ3B,EAAW,EAAXA,KACZ,OACE,wBAEEmD,aAAcnD,EAFhB,SAIGA,GAHIA,WAUb+B,IAAkBD,GAAc,wDAElC,wBACEkB,KAAK,SACLI,MAAO,CAAEC,QAAS,SAFpB,2BAlGV,GAAiChC,IAAMiC,WCD1BC,EAAb,4MACE1B,MAAQ,CACN2B,aAAc,IAFlB,EAkBElB,QAAmB,SAACR,EAAU2B,GAC5B,IAAMC,EAAe5D,EAAM6D,MAAK,SAAAlC,GAAI,OAAIA,EAAKzB,OAAS8B,KAEtD,GAAI4B,GAAgBD,EAAW,CAC7B,IAAMG,EAAgB,CACpB3C,OAAQyC,EAAa3D,GACrBA,IAAK,IAAI8D,KACT3C,MAAOuC,EACPtC,WAAW,EACXM,KAAMiC,GAGR,EAAKnB,UAAS,SAAAV,GACZ,MAAO,CAAE2B,aAAa,GAAD,mBAAM3B,EAAM2B,cAAZ,CAA0BI,UA/BvD,uDAKE,WACE,IAAMJ,EAAexC,EAAMW,KAAI,SAAAmC,GAC7B,IAAMC,EAAejE,EAAM6D,MAAK,SAAAlC,GAAI,OAAIA,EAAK1B,KAAO+D,EAAK7C,UAEzD,OAAO,2BACF6C,GADL,IAEErC,KAAMsC,GAAgB,UAI1BlB,KAAKN,SAAS,CAAEiB,mBAfpB,oBAoCE,WACE,OACE,sBAAKQ,UAAU,MAAf,UACE,+CAEA,cAACtC,EAAD,CAAUV,MAAO6B,KAAKhB,MAAM2B,eAE5B,cAAC,EAAD,CAAa1D,MAAOA,EAAOwC,QAASO,KAAKP,iBA3CjD,GAAyBjB,IAAMiC,WCX/BW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8d668878.chunk.js","sourcesContent":["import { User } from '../types/User';\n\nconst users: User[] = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nimport { Todo } from '../types/Todo';\n\nconst todos: Todo[] = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\n\ntype Props = {\n  name: string,\n  email: string,\n};\n\nexport const UserInfo = React.memo<Props>(\n  ({ name, email }) => (\n    <>\n      <p>{name}</p>\n      <p>{email}</p>\n    </>\n  ),\n);\n","import React from 'react';\nimport { User } from '../../types/User';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  title: string,\n  complited: boolean,\n  user: User,\n};\n\nexport const TodoInfo = React.memo<Props>(\n  ({ title, complited, user }) => (\n    <>\n      <h3>{title}</h3>\n      <p>{complited ? 'Done' : 'Not done'}</p>\n      <UserInfo name={user.name} email={user.email} />\n    </>\n  ),\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList = React.memo<Props>(\n  ({ todos }) => (\n    <ul>\n      {todos.map(({\n        id,\n        title,\n        completed,\n        user,\n      }) => {\n        return user && (\n          <li key={id}>\n            <TodoInfo\n              title={title}\n              complited={completed}\n              user={user}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  ),\n);\n","import React, { ChangeEventHandler, FormEventHandler } from 'react';\nimport { AddTodo } from '../../types/AddTodo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  users: User[];\n  addTodo: AddTodo;\n};\n\ntype State = {\n  title: string,\n  userName: string,\n  buttonClicked: boolean,\n};\n\nexport class AddTodoForm extends React.Component<Props> {\n  state: State = {\n    title: '',\n    userName: '',\n    buttonClicked: false,\n  };\n\n  submitHandler: FormEventHandler = (e) => {\n    e.preventDefault();\n\n    const {\n      title,\n      userName,\n    } = this.state;\n\n    const canAdd = !!userName && !!title.trim();\n\n    if (canAdd) {\n      this.props.addTodo(userName, title);\n    }\n\n    this.setState({\n      title: canAdd ? '' : title,\n      userName: canAdd ? '' : userName,\n      buttonClicked: !canAdd,\n    });\n  };\n\n  changeHandler: ChangeEventHandler<HTMLInputElement | HTMLSelectElement> = (e) => {\n    const { name } = e.target;\n    const { value } = e.target;\n    const validation = /^[a-zA-ZА-Яа-я0-9\\s]+$/;\n\n    if (name === 'title' && !validation.test(value) && value.length > 0) {\n      return;\n    }\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const {\n      title,\n      userName,\n      buttonClicked,\n    } = this.state;\n\n    const {\n      users,\n    } = this.props;\n\n    return (\n      <fieldset>\n        <legend>Add todo form</legend>\n\n        <form onSubmit={this.submitHandler}>\n          <p>Todo title</p>\n\n          <label htmlFor=\"title\">\n            <input\n              type=\"text\"\n              id=\"title\"\n              name=\"title\"\n              value={title}\n              placeholder=\"Enter the title\"\n              onChange={this.changeHandler}\n            />\n          </label>\n\n          {(buttonClicked && !title.trim()) && (<span>Please enter the title</span>)}\n\n          <p>User</p>\n\n          <label htmlFor=\"user\">\n            <select\n              id=\"user\"\n              name=\"userName\"\n              value={userName}\n              onChange={this.changeHandler}\n            >\n              <option value=\"\">Choose user</option>\n              {users.map(({ name }) => {\n                return (\n                  <option\n                    key={name}\n                    defaultValue={name}\n                  >\n                    {name}\n                  </option>\n                );\n              })}\n            </select>\n          </label>\n\n          {(buttonClicked && !userName) && (<span>Please choose a user</span>)}\n\n          <button\n            type=\"submit\"\n            style={{ display: 'block' }}\n          >\n            Add\n          </button>\n        </form>\n\n      </fieldset>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\n\nimport users from './api/users';\nimport todos from './api/todos';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { AddTodoForm } from './components/AddTodoForm';\nimport { AddTodo } from './types/AddTodo';\n\ntype State = {\n  visibleTodos: Todo[];\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    visibleTodos: [],\n  };\n\n  componentDidMount() {\n    const visibleTodos = todos.map(todo => {\n      const theRightUser = users.find(user => user.id === todo.userId);\n\n      return {\n        ...todo,\n        user: theRightUser || null,\n      };\n    });\n\n    this.setState({ visibleTodos });\n  }\n\n  addTodo: AddTodo = (userName, todoTitle) => {\n    const selectedUser = users.find(user => user.name === userName);\n\n    if (selectedUser && todoTitle) {\n      const newTodo: Todo = {\n        userId: selectedUser.id,\n        id: +new Date(),\n        title: todoTitle,\n        completed: false,\n        user: selectedUser,\n      };\n\n      this.setState(state => {\n        return { visibleTodos: [...state.visibleTodos, newTodo] };\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h1>List of todos</h1>\n\n        <TodoList todos={this.state.visibleTodos} />\n\n        <AddTodoForm users={users} addTodo={this.addTodo} />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}